<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Winnie.Xi</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-27T02:49:29.654Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Winnie.Xi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python 生成器及迭代器</title>
    <link href="http://yoursite.com/2020/04/27/python-%E7%94%9F%E6%88%90%E5%99%A8%E5%8F%8A%E8%BF%AD%E4%BB%A3%E5%99%A8/"/>
    <id>http://yoursite.com/2020/04/27/python-%E7%94%9F%E6%88%90%E5%99%A8%E5%8F%8A%E8%BF%AD%E4%BB%A3%E5%99%A8/</id>
    <published>2020-04-27T02:48:01.000Z</published>
    <updated>2020-04-27T02:49:29.654Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;迭代器协议&lt;br&gt;什么是迭代器协议&lt;br&gt;对象需要提供next方法,它要么返回迭代中的下一项,要么就引起一个StopIteration异常,终止迭代.&lt;/p&gt;
&lt;p&gt;可迭代对象&lt;br&gt;实现了迭代器协议的对象就是可迭代对象(实现方式是,实现iter方法)&lt;/p&gt;
&lt;p&gt;协议&lt;
        
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="生成器及迭代器" scheme="http://yoursite.com/tags/%E7%94%9F%E6%88%90%E5%99%A8%E5%8F%8A%E8%BF%AD%E4%BB%A3%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>git repo创建修改及分支merge</title>
    <link href="http://yoursite.com/2020/04/27/git-repo%E5%88%9B%E5%BB%BA%E4%BF%AE%E6%94%B9%E5%8F%8A%E5%88%86%E6%94%AFmerge/"/>
    <id>http://yoursite.com/2020/04/27/git-repo%E5%88%9B%E5%BB%BA%E4%BF%AE%E6%94%B9%E5%8F%8A%E5%88%86%E6%94%AFmerge/</id>
    <published>2020-04-27T02:42:40.000Z</published>
    <updated>2020-04-27T02:44:06.105Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h4 id=&quot;创建项目：&quot;&gt;&lt;a href=&quot;#创建项目：&quot; class=&quot;headerlink&quot; title=&quot;创建项目：&quot;&gt;&lt;/a&gt;创建项目：&lt;/h4&gt;&lt;p&gt;(1)mkdir最好在原项目上fork一个git repo&lt;/p&gt;
&lt;p&gt;(2)cd the
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hashmap遍历</title>
    <link href="http://yoursite.com/2020/04/22/hashmap%E9%81%8D%E5%8E%86/"/>
    <id>http://yoursite.com/2020/04/22/hashmap%E9%81%8D%E5%8E%86/</id>
    <published>2020-04-22T05:12:21.000Z</published>
    <updated>2020-04-22T05:15:53.481Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h4 id=&quot;1-使用-Iterator-遍历-HashMap-EntrySet&quot;&gt;&lt;a href=&quot;#1-使用-Iterator-遍历-HashMap-EntrySet&quot; class=&quot;headerlink&quot; title=&quot;1. 使用 Iterator 遍历 HashMap
        
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="hashmap" scheme="http://yoursite.com/tags/hashmap/"/>
    
  </entry>
  
  <entry>
    <title>mock及使用</title>
    <link href="http://yoursite.com/2020/04/21/mock%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/04/21/mock%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-21T05:14:06.000Z</published>
    <updated>2020-04-21T05:16:29.819Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h4 id=&quot;mock-数据的好处&quot;&gt;&lt;a href=&quot;#mock-数据的好处&quot; class=&quot;headerlink&quot; title=&quot;mock 数据的好处&quot;&gt;&lt;/a&gt;mock 数据的好处&lt;/h4&gt;&lt;h5 id=&quot;团队可以并行工作&quot;&gt;&lt;a href=&quot;#团队可以并行工作&quot;
        
      
    
    </summary>
    
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="mock" scheme="http://yoursite.com/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>restful 介绍</title>
    <link href="http://yoursite.com/2020/04/21/restful-%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2020/04/21/restful-%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-04-21T05:04:03.000Z</published>
    <updated>2020-04-21T05:07:54.876Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;正文&lt;br&gt;介绍&lt;br&gt;自从Roy Fielding博士在2000年他的博士论文中提出REST（Representational State Transfer）风格的软件架构模式后，REST就基本上迅速取代了复杂而笨重的SOAP，成为Web
        
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="restful" scheme="http://yoursite.com/tags/restful/"/>
    
  </entry>
  
  <entry>
    <title>java多线程</title>
    <link href="http://yoursite.com/2020/04/21/java%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/04/21/java%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2020-04-21T04:50:22.000Z</published>
    <updated>2020-04-21T04:51:31.231Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;1-线程与进程：&quot;&gt;&lt;a href=&quot;#1-线程与进程：&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="多线程" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>java reflect</title>
    <link href="http://yoursite.com/2020/04/21/java-reflect/"/>
    <id>http://yoursite.com/2020/04/21/java-reflect/</id>
    <published>2020-04-21T03:01:36.000Z</published>
    <updated>2020-04-22T01:38:47.768Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;反射是框架设计的灵魂&lt;br&gt;（使用的前提条件：必须先得到代表的字节码的Class，Class类用于表示.class文件（字节码））&lt;/p&gt;
&lt;p&gt;一、反射的概述&lt;br&gt;JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够
        
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="反射" scheme="http://yoursite.com/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://yoursite.com/2020/04/21/My-New-Post/"/>
    <id>http://yoursite.com/2020/04/21/My-New-Post/</id>
    <published>2020-04-21T01:37:15.000Z</published>
    <updated>2020-04-21T01:37:15.974Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Demo test</title>
    <link href="http://yoursite.com/2020/04/21/Demo-test/"/>
    <id>http://yoursite.com/2020/04/21/Demo-test/</id>
    <published>2020-04-21T01:35:53.000Z</published>
    <updated>2020-04-21T05:00:23.730Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是一次demo test for hexo blog&lt;/p&gt;
&lt;p&gt;通用修饰器&lt;br&gt;对每个类型都有一个修饰器形式，怎么记得下来？所以就有了这个”万能修饰器”:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def w_test(func):
    def inner(*args,
        
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="装饰器" scheme="http://yoursite.com/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/04/21/hello-world/"/>
    <id>http://yoursite.com/2020/04/21/hello-world/</id>
    <published>2020-04-21T01:30:55.239Z</published>
    <updated>2020-04-21T01:30:55.239Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a
        
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
