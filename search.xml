<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Demo test</title>
    <url>/2020/04/21/Demo-test/</url>
    <content><![CDATA[<p>这是一次demo test for hexo blog</p>
<p>通用修饰器<br>对每个类型都有一个修饰器形式，怎么记得下来？所以就有了这个”万能修饰器”:</p>
<pre><code>def w_test(func):
    def inner(*args, **kwargs):
        ret = func(*args, **kwargs)
        return ret

    return inner</code></pre><p>@w_test<br>def test():<br>    print(‘test called’)</p>
<p>@w_test<br>def test1():<br>    print(‘test1 called’)<br>    return ‘python’</p>
<p>@w_test<br>def test2(a):<br>    print(‘test2 called and value is %d ‘ % a)</p>
<p>test()<br>test1()<br>test2(9)</p>
<h1 id="输出"><a href="#输出" class="headerlink" title="输出:"></a>输出:</h1><p>#test called<br>#test1 called<br>#test2 called and value is 9 </p>
]]></content>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/2020/04/21/My-New-Post/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>java reflect</title>
    <url>/2020/04/21/java-reflect/</url>
    <content><![CDATA[<p>反射是框架设计的灵魂<br>（使用的前提条件：必须先得到代表的字节码的Class，Class类用于表示.class文件（字节码））</p>
<p>一、反射的概述<br>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。<br>要想解剖一个类,必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法.所以先要获取到每一个字节码文件对应的Class类型的对象.</p>
<p>以上的总结就是什么是反射<br>反射就是把java类中的各种成分映射成一个个的Java对象<br>例如：一个类有：成员变量、方法、构造方法、包等等信息，利用反射技术可以对一个类进行解剖，把个个组成部分映射成一个个对象。<br>     （其实：一个类中这些成员方法、构造方法、在加入类中都有一个类来描述）<br>如图是类的正常加载过程：反射的原理在与class对象。<br>熟悉一下加载的时候：Class对象的由来是将class文件读入内存，并为之创建一个Class对象。</p>
<p>其中这个Class对象很特殊。我们先了解一下这个Class类</p>
<p>二、查看Class类在java中的api详解（1.7的API）<br>如何阅读java中的api详见java基础之——String字符串处理</p>
<p>————————————————<br>版权声明：本文为CSDN博主「敬业的小码哥」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/sinat_38259539/java/article/details/71799078" target="_blank" rel="noopener">https://blog.csdn.net/sinat_38259539/java/article/details/71799078</a></p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
